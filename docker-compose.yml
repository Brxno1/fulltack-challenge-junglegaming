services:
  auth-service:
    container_name: auth-service
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
    ports:
      - "3002:3002"
    volumes:
      # Mount source code for hot reload
      - ./apps/auth-service:/challenge/apps/auth-service
      # Mount packages for workspace dependencies
      - ./packages:/challenge/packages
      # Mount root package files
      - ./package.json:/challenge/package.json
      - ./pnpm-lock.yaml:/challenge/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/challenge/pnpm-workspace.yaml
      # Exclude node_modules to use container's installed packages
      - /challenge/node_modules
      - /challenge/apps/auth-service/node_modules
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
    env_file:
      - ./.env
      - ./apps/auth-service/.env
    depends_on:
      - db
    networks:
      - challenge-network
    restart: unless-stopped

  db:
    image: postgres:17.5-alpine3.21
    container_name: db
    ports:
      - "5432:5432"
    networks:
      - challenge-network
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - challenge-network
    env_file:
      - ./.env
    volumes: ["rabbitmq_data:/var/lib/rabbitmq"]

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  challenge-network:
    driver: bridge
